{"version":3,"file":"kayak.js","sources":["../src/util/actions.ts","../src/watcher.ts","../src/model.ts","../src/combineReducers.ts","../src/util/index.ts","../src/index.ts"],"sourcesContent":["\r\nconst randomString = () =>\r\n  Math.random().toString(36).substring(8).split('').join('_')\r\n\r\nconst ActionTypes = {\r\n  INIT: `@@kayak/INIT${randomString()}`,\r\n  REPLACE: `@@kayak/REPLACE${randomString()}`,\r\n}\r\n\r\nexport default ActionTypes\r\n\r\nexport function isObject(action: any) {\r\n  return typeof action == 'object' && action != null;\r\n}","\r\nexport default class Watcher {\r\n    static watchers: Array<Function> = [];\r\n    static keyMap: Map<string, Array<Function>> = new Map();\r\n    static isExec: boolean = false;\r\n  \r\n    public static update(key?: string): void {\r\n        if (this.isExec) {\r\n            return;\r\n        }\r\n        this.isExec = true;\r\n        let extra:Array<any>=[];\r\n        if(key!==undefined ){\r\n            extra=Watcher.keyMap.get(key)||[];\r\n        }\r\n        \r\n        let watchers:Array<Function>=[...Watcher.watchers,...extra];\r\n        watchers?.forEach(fn => fn());\r\n        console.log('我执行了update',key);\r\n        \r\n        this.isExec=false;\r\n    }\r\n    static remove(fn: Function, key?: string) {\r\n        let watchers:Array<Function>|undefined=this.watchSelect(key);\r\n        watchers?.splice(watchers.indexOf(fn), 1);\r\n    }\r\n    static add(fn: Function, key?: string) {\r\n        let watchers:Array<Function>|undefined=this.watchSelect(key);\r\n        if (key && watchers === undefined) {\r\n            this.keyMap.set(key, new Array());\r\n            this.keyMap.get(key)?.push(fn);\r\n        }\r\n        watchers?.push(fn);\r\n    }\r\n    private static  watchSelect(key: string | undefined) {\r\n        return key === undefined ? Watcher.watchers : Watcher.keyMap.get(key);\r\n    }\r\n}","import Watcher from \"./watcher\";\r\n\r\nexport default class Model {\r\n\r\n    constructor(data: object) {\r\n        let proxy = new Proxy(data, {\r\n            set: (src: any, key: string, value: any, receiver: any) => {\r\n\r\n                //值未变,proxy 不处理\r\n                if (src[key] === value) {\r\n                    return true;\r\n                }\r\n                //不处理原型属性 \r\n                let excludes = ['__proto__', 'constructor'];\r\n\r\n                if (excludes.includes(<string>key)) {\r\n                    return true;\r\n                }\r\n                ;\r\n\r\n                if (key != '$watch') {\r\n                    Watcher.update(key);\r\n                }\r\n\r\n                return Reflect.set(src, key, value, receiver);\r\n            },\r\n            get: (src: any, key: string | symbol, receiver) => {\r\n                let res = Reflect.get(src, key, receiver);\r\n\r\n                let data = ModelManager.getFromDataMap(src[key]);\r\n                if (data) {\r\n                    return data;\r\n                }\r\n                if (typeof res === 'object' && res !== null) {\r\n                    if (!src[key].$watch) {\r\n                        let p = new Model(res);\r\n                        return p;\r\n                    }\r\n                }\r\n                return res;\r\n            },\r\n            deleteProperty: function (src: any, key: any) {\r\n                if (src[key] != null && typeof src[key] === 'object') {\r\n                    ModelManager.delToDataMap(src[key]);\r\n                }\r\n                delete src[key];\r\n                return true;\r\n            }\r\n        });\r\n        proxy.$watch = true;\r\n\r\n        ModelManager.addToDataMap(data, proxy);\r\n\r\n        return proxy;\r\n    }\r\n\r\n}\r\n\r\nclass ModelManager {\r\n    private static dataMap: WeakMap<object, Model> = new WeakMap();\r\n\r\n    static addToDataMap(data: any, proxy: any) {\r\n        this.dataMap.set(data, proxy);\r\n    }\r\n\r\n    static delToDataMap(data: any) {\r\n        this.dataMap.delete(data);\r\n    }\r\n\r\n    static getFromDataMap(data: any) {\r\n        return this.dataMap.get(data);\r\n    }\r\n}\r\n","import ActionTypes from \"./util/actions\"\r\nimport { Reducer, ReducersObject, StateObject } from \"./types/reducer\"\r\nimport { AnyAction } from \"./types/action\"\r\nexport default function combineReducers(reducers: ReducersObject | any): Reducer {\r\n  const reducerKeys = Object.keys(reducers);\r\n  const combineReducers: ReducersObject = {};\r\n\r\n  for (let i = 0; i < reducerKeys.length; i++) {\r\n    const key:string = reducerKeys[i]\r\n\r\n    if (typeof reducers[key] === 'function') {\r\n      combineReducers[key] = reducers[key]\r\n    } else {\r\n      throw new Error(`${key}对应的reducer不是函数，请确保${reducers[key]}为函数,\r\n                      Please ensure that the reducer you provide is a function\r\n        `);\r\n    }\r\n  }\r\n  const combineKeys = Object.keys(combineReducers);\r\n\r\n\r\n  let shapeAssertionError: Error\r\n  try {\r\n    assertReducerShape(combineReducers)\r\n  } catch (e) {\r\n    shapeAssertionError = e\r\n  }\r\n\r\n  return function (\r\n    state: StateObject<typeof reducers> = {},\r\n    action: AnyAction,\r\n  ) {\r\n    if (shapeAssertionError) {\r\n      throw shapeAssertionError\r\n    }\r\n\r\n    for (let i = 0; i < combineKeys.length; i++) {\r\n      const key = combineKeys[i]\r\n      const reducer = combineReducers[key]\r\n      const previousStateForKey = state[key]\r\n      const nextStateForKey = reducer(previousStateForKey, action)\r\n      if (typeof nextStateForKey === 'undefined') {\r\n        const actionType = action && action.type\r\n        throw new Error(\r\n          `When called with an action of type ${actionType ? `\"${String(actionType)}\"` : '(unknown type)'\r\n          }, the slice reducer for key \"${key}\" returned undefined. ` +\r\n          `To ignore an action, you must explicitly return the previous state. ` +\r\n          `If you want this reducer to hold no value, you can return null instead of undefined.`\r\n        )\r\n      }\r\n\r\n      state[key] = nextStateForKey;\r\n    }\r\n\r\n  }\r\n}\r\nfunction assertReducerShape(reducers: ReducersObject) {\r\n  Object.keys(reducers).forEach(key => {\r\n    const reducer = reducers[key]\r\n    const initialState = reducer(undefined, { type: ActionTypes.INIT })\r\n\r\n    if (typeof initialState === 'undefined') {\r\n      throw new Error(\r\n        `The slice reducer for key \"${key}\" returned undefined during initialization. ` +\r\n        `If the state passed to the reducer is undefined, you must ` +\r\n        `explicitly return the initial state. The initial state may ` +\r\n        `not be undefined. If you don't want to set a value for this reducer, ` +\r\n        `you can use null instead of undefined.`\r\n      )\r\n    }\r\n\r\n    if (\r\n      typeof reducer(undefined, {\r\n        type: ActionTypes.INIT + '1'\r\n      }) === 'undefined'\r\n    ) {\r\n      throw new Error(\r\n        `The slice reducer for key \"${key}\" returned undefined when probed with a random type. ` +\r\n        `Don't try to handle '${ActionTypes.INIT}' or other actions in \"redux/*\" ` +\r\n        `namespace. They are considered private. Instead, you must return the ` +\r\n        `current state for any unknown actions, unless it is undefined, ` +\r\n        `in which case you must return the initial state, regardless of the ` +\r\n        `action type. The initial state may not be undefined, but can be null.`\r\n      )\r\n    }\r\n  })\r\n}","\r\nexport default function clone(proxy: object,...exc:Array<string>) :object {\r\n\r\n    let ds: Array<string> = Object.getOwnPropertyNames(proxy);\r\n    let res = new Object();\r\n    for (let i = 0; i < ds.length; i++) {\r\n        if (proxy.hasOwnProperty(ds[i])&&ds[i]!=='$watch'&&!exc.includes(ds[i])) {\r\n            let param = Reflect.get(proxy, ds[i]);\r\n            Object.defineProperty(res, ds[i], {\r\n                value: function () {\r\n                    if (typeof param === 'object' && param !== null) {\r\n                        return clone(param)\r\n                    } else {\r\n                        return param\r\n                    }\r\n                }(),\r\n                enumerable:true\r\n            })\r\n        }\r\n    }\r\n    return res;\r\n}","\r\nimport Action from './types/action';\r\nimport { Reducer } from './types/reducer';\r\nimport ActionTypes, { isObject } from './util/actions';\r\nimport Watcher from './watcher';\r\nimport Model from './model';\r\nimport combineReducers from './combineReducers';\r\nimport clone from './util/index';\r\n\r\n/**\r\n * \r\n * @param reducer A function to process your action state\r\n * @returns An object that controls your state repository\r\n */\r\nexport default function createStore(reducer: Reducer | object) {\r\n    /**\r\n     * Is the scheduling Reducer method being executed\r\n     */\r\n    let isDispatching: boolean = false;\r\n    /**\r\n     * \r\n     *  If there is only one reducer function, set the default value\r\n     */\r\n    let currentReducer = typeof reducer === 'function' ? reducer : combineReducers(reducer);\r\n    /**\r\n     *  \r\n        初始化数据\r\n        Initialization data\r\n     */\r\n    let data = {\r\n        'currentState': undefined\r\n    };\r\n    /**\r\n     * 初始化代理对象返回的proxy\r\n     * Initializes the proxy returned by the proxy object\r\n     */\r\n    let proxy: any;\r\n\r\n    let combine: boolean = typeof reducer === 'function' ? false : true;\r\n\r\n    /**\r\n     * \r\n     * @param action Action对象，要求传入type,\r\n     *              Action object. Type is required\r\n     */\r\n    function dispatch(action: Action) {\r\n        if (!isObject(action)) {\r\n            throw new Error(\r\n                `Actions must be a objects. Instead, the actual type was: '${typeof action}'`\r\n            )\r\n        }\r\n\r\n        if (typeof action.type === 'undefined') {\r\n            throw new Error(\r\n                'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.'\r\n            )\r\n        }\r\n\r\n        let currentState = data.currentState;\r\n        try {\r\n            isDispatching = true\r\n            if (combine) {\r\n                currentReducer(proxy, action);\r\n            } else {\r\n                proxy['currentState'] = currentReducer(currentState, action);\r\n            }\r\n        } finally {\r\n            isDispatching = false\r\n        }\r\n    }\r\n    function subscribe(listener: () => void, key?: string) {\r\n        if (typeof listener !== 'function') {\r\n            throw new Error(\r\n                `Expected the listener to be a function. Instead, received: '${typeof (\r\n                    listener\r\n                )}'`\r\n            )\r\n        }\r\n        if (isDispatching) {\r\n            throw new Error(\r\n                'You may not call store.subscribe() while the reducer is executing. ' +\r\n                'If you would like to be notified after the store has been updated, subscribe from a ' +\r\n                'component and invoke store.getState() in the callback to access the latest state. ' +\r\n                'See https://redux.js.org/api/store#subscribelistener for more details.'\r\n            )\r\n        }\r\n        let isSubscribed = true;\r\n        key !== undefined ? Watcher.add(listener, key) : Watcher.add(listener);\r\n        return function unsubscribe() {\r\n            if (!isSubscribed) {\r\n                return\r\n            }\r\n\r\n            if (isDispatching) {\r\n                throw new Error(\r\n                    'You may not unsubscribe from a store listener while the reducer is executing. '\r\n                )\r\n            }\r\n            Watcher.remove(listener, key);\r\n            isSubscribed = false;\r\n        }\r\n\r\n\r\n    }\r\n    function getState(original: boolean = true) {\r\n        if (isDispatching) {\r\n            throw new Error(\r\n                'You may not call store.getState() while the reducer is executing. ' +\r\n                'The reducer has already received the state as an argument. ' +\r\n                'Pass it down from the top reducer instead of reading it from the store.' +\r\n                'reducer还在执行中'\r\n            )\r\n        }\r\n        /**\r\n         * get clone object\r\n         */\r\n        const res: any = original ? clone(data, 'currentState') : data;\r\n\r\n        return combine ? res : res['currentState'];\r\n    }\r\n    /**\r\n     * \r\n     * @param newReducer A new Reducer replaces the original reducer function\r\n     * @returns store\r\n     */\r\n    function replace(newReducer: Reducer) {\r\n        if (typeof newReducer !== 'function') {\r\n            throw new Error(\r\n                `Expected the nextReducer to be a function. Instead, received: '${typeof\r\n                newReducer\r\n                }`\r\n            )\r\n        }\r\n        dispatch({ type: ActionTypes.REPLACE } as Action);\r\n        return store;\r\n    }\r\n    /**\r\n     *   proxy Initialize data\r\n     */\r\n    proxy = new Model(data);\r\n    /**\r\n     * state get default data\r\n     */\r\n    dispatch({ type: ActionTypes.INIT } as Action);\r\n\r\n    const store = {\r\n        dispatch: dispatch,\r\n        subscribe,\r\n        getState,\r\n        replace,\r\n    }\r\n    return store;\r\n}"],"names":[],"mappings":"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"}